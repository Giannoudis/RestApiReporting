@page "/reports"
@page "/reports/{Report}"
@using RestApiReporting.WebApp.ViewModel

<PageTitle>Reports</PageTitle>

@* --- report selection --- *@
@if (AvailableReports != null && AvailableReports.Count > 0)
{
    <MudStack Row="true" Style="width: fit-content;">
        <MudSelect T="string"
                   Value="Report"
                   ValueChanged="ChangeReport"
                   Dense="true"
                   Disabled="@(AvailableReports == null || AvailableReports.Count < 1)"
                   ReadOnly="@(AvailableReports == null || AvailableReports.Count == 1)"
                   Label="Reports"
                   Style="min-width: 20rem"
                   Variant="Variant.Outlined">
            @foreach (var report in AvailableReports!)
            {
                <MudSelectItem T="string" Value="report.Name">
                    @report.Name
                </MudSelectItem>
            }
        </MudSelect>
        <MudText Class="align-self-center">
            @SelectedReport?.Description
            @if (SelectedReport?.SupportedCultures != null &&
           SelectedReport.SupportedCultures.Any())
            {
                @($" [{string.Join(", ", SelectedReport.SupportedCultures)}]")
            }
        </MudText>
    </MudStack>
}
else
{
    <MudPaper Typo="Typo.caption" Class="mt-4 pa-4" Style="Width: fit-content;">
        No reports available.
    </MudPaper>
}

@* --- report parameters --- *@
@if (SelectedReport != null)
{
    <MudPaper Elevation="4" Class="pa-4 my-4" Style="width: fit-content; min-width: 20rem;">
        @if (SelectedParameters.Any())
        {
            <MudStack Class="pb-4">
                <MudForm @ref="@parameterForm">
                    @foreach (var parameter in SelectedParameters)
                    {
                        switch (parameter.DataType)
                        {
                            case ReportDataType.String:
                                <MudTextField @bind-Value="@parameter.Value"
                                              Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                              Required="@(parameter.Required && !parameter.Nullable)"
                                              Label="@parameter.Name.NameFormat(NameFormatType)" />
                                break;
                            case ReportDataType.DateTime:
                                <MudDatePicker @bind-Date="@parameter.ValueAsDateTime"
                                               Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                               Required="@(parameter.Required && !parameter.Nullable)"
                                               Editable="true"
                                               Label="@parameter.Name.NameFormat(NameFormatType)" />
                                break;
                            case ReportDataType.Integer:
                                <MudNumericField T="int?" @bind-Value="@parameter.ValueAsInteger"
                                                 Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                                 Required="@(parameter.Required && !parameter.Nullable)"
                                                 Label="@parameter.Name.NameFormat(NameFormatType)" />
                                break;
                            case ReportDataType.Boolean:
                                <MudSwitch T="bool?" @bind-Checked="@parameter.ValueAsBoolean"
                                           Required="@(parameter.Required && !parameter.Nullable)"
                                           Label="@parameter.Name.NameFormat(NameFormatType)" />
                                break;
                            case ReportDataType.Decimal:
                                <MudNumericField T="decimal?" @bind-Value="@parameter.ValueAsDecimal"
                                                 Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                                 Required="@(parameter.Required && !parameter.Nullable)"
                                                 Label="@parameter.Name.NameFormat(NameFormatType)" />
                                break;
                        }
                    }
                </MudForm>
            </MudStack>
        }
        <MudStack Row="true">
            <MudButton OnClick="ExecuteReport"
                       Size="@(Dense ? Size.Small : Size.Medium)"
                       Variant="Variant.Filled" Color="Color.Primary">
                @(SelectedDataSet != null ? "Reload" : "Load")
            </MudButton>
        </MudStack>
    </MudPaper>
}

@* --- download --- *@
@if (SelectedDataSet != null)
{
    <MudStack Row="true" Class="py-4">
        <MudText Typo="Typo.button" Class="align-self-center">
            Download
        </MudText>
        <MudButton OnClick="DownloadJson"
                   Size="@(Dense ? Size.Small : Size.Medium)"
                   Variant="Variant.Filled" Color="Color.Primary">
            Json
        </MudButton>
        <MudButton OnClick="DownloadXml"
                   Size="@(Dense ? Size.Small : Size.Medium)"
                   Variant="Variant.Filled" Color="Color.Primary">
            XML
        </MudButton>
        <MudButton OnClick="DownloadExcel"
                   Size="@(Dense ? Size.Small : Size.Medium)"
                   Variant="Variant.Filled" Color="Color.Primary">
            Excel
        </MudButton>
        <MudButton OnClick="DownloadPdf"
                   Size="@(Dense ? Size.Small : Size.Medium)"
                   Variant="Variant.Filled" Color="Color.Primary">
            Pdf
        </MudButton>
    </MudStack>
}

@* --- busy indicator --- *@
@if (Loading)
{
    <MudProgressLinear Color="Color.Info" Rounded="true"
                       Class="mud-table-loading-progress"
                       Indeterminate="true" />
}

@if (SelectedDataSet != null)
{
    @* --- table tabs --- *@
    <MudTabs Elevation="4" ApplyEffectsToContainer="true">
        @foreach (var table in SelectedDataSet.Tables)
        {
            <MudTabPanel Text="@($"{table.TableName} ({table.Rows.Count})")">
                <MudDataGrid T="ReportRow"
                             Items="SelectedRows[table.TableName]"
                             Hideable="false"
                             ShowColumnOptions="false"
                             Filterable="true"
                             Dense="@Dense"
                             RowsPerPage="@(Configuration?.DataPageCount() ?? 10)"
                             FilterMode="@(Configuration?.FilterMode() ?? DataGridFilterMode.Simple)"
                             ColumnResizeMode="ResizeMode.Column"
                             SortMode="SortMode.Single">
                    <Columns>
                        @{
                            var selectedColumns = SelectedColumns[table.TableName];
                            for (var column = 0; column < selectedColumns.Count; column++)
                            {
                                var index = column;
                                switch (selectedColumns[column].DataType)
                                {
                                    case ReportDataType.DateTime:
                                        <PropertyColumn Property="x => x.GetDateTimeValue(index)"
                                                        Hidden="@FilteredColumn(table.TableName, index)"
                                                        Title="@selectedColumns[index].Name.NameFormat(NameFormatType)">
                                            <CellTemplate>
                                                @context.Item.GetDateTimeValue(index)?.ToCompactString()
                                            </CellTemplate>
                                        </PropertyColumn>
                                        break;
                                    case ReportDataType.Integer:
                                        <PropertyColumn Property="x => x.GetIntegerValue(index)"
                                                        Hidden="@FilteredColumn(table.TableName, index)"
                                                        Title="@selectedColumns[index].Name.NameFormat(NameFormatType)" />
                                        break;
                                    case ReportDataType.Boolean:
                                        <PropertyColumn Property="x => x.GetBooleanValue(index)"
                                                        Hidden="@FilteredColumn(table.TableName, index)"
                                                        Title="@selectedColumns[index].Name.NameFormat(NameFormatType)" />
                                        break;
                                    case ReportDataType.Decimal:
                                        <PropertyColumn Property="x => x.GetDecimalValue(index)"
                                                        Hidden="@FilteredColumn(table.TableName, index)"
                                                        Title="@selectedColumns[index].Name.NameFormat(NameFormatType)" />
                                        break;
                                    case ReportDataType.String:
                                        <PropertyColumn Property="x => x.GetStringValue(index)"
                                                        Hidden="@FilteredColumn(table.TableName, index)"
                                                        Title="@selectedColumns[index].Name.NameFormat(NameFormatType)" />
                                        break;
                                }
                            }
                        }
                    </Columns>
                    <PagerContent>
                        <MudStack Row="true">
                            @if (HasParameterColumns(table.TableName))
                            {
                                <MudSwitch @bind-Checked="ShowParameterColumns"
                                           Size="Size.Small"
                                           Color="Color.Primary"
                                           Class="ml-4"
                                           Style="align-self: center;">
                                    Parameter columns
                                </MudSwitch>
                            }
                            <MudSpacer />
                            <MudDataGridPager T="ReportRow" />
                        </MudStack>
                    </PagerContent>
                    <NoRecordsContent>
                        Empty report result.
                    </NoRecordsContent>
                </MudDataGrid>
            </MudTabPanel>
        }

    </MudTabs>

    @* --- relations --- *@
    if (SelectedDataSet.Relations.Any())
    {
        <MudPaper Elevation="4" Class="pa-4 mt-4" Style="width: fit-content; min-width: 20rem;">
            <MudStack>
                @foreach (var relation in SelectedDataSet.Relations)
                {
                    <MudText Style="font-family: monospace; font-size: medium;">
                        Relation @relation
                    </MudText>
                }
            </MudStack>
        </MudPaper>
    }
}

@* --- messages --- *@
@if (!string.IsNullOrWhiteSpace(InfoMessage))
{
    <MudPaper Class="mt-4 py-2 px-4 mud-info"
              Style="width: fit-content;">
        @InfoMessage
    </MudPaper>
}
@if (!string.IsNullOrWhiteSpace(ErrorMessage))
{
    <MudPaper Class="mt-4 py-2 px-4 mud-error"
              Style="width: fit-content;">
        @ErrorMessage
    </MudPaper>
}